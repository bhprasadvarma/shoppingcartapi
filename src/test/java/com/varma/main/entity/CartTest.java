/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 14 20:54:40 GMT 2021
 */

package com.varma.main.entity;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;

import java.util.Date;
import java.util.LinkedList;
import java.util.List;

import org.junit.Test;

public class CartTest  {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Date Date0 = new Date((-2668), (-2668), (-2668));
      Cart cart0 = new Cart("lC7,rj=o", "updated=", "id=", Date0, Date0, (List<Product>) null);
      String string0 = cart0.toString();
      assertEquals("Cart [id=lC7,rj=o, countryCode=updated=, currency=id=, created=Mon May 12 00:00:00 GMT 999, updated=Mon May 12 00:00:00 GMT 999, ]", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Date Date0 = new Date(1301, 0, 1301, (-2286), 1960);
      LinkedList<Product> linkedList0 = new LinkedList<Product>();
      Cart cart0 = new Cart("``LN;4,s;", "``LN;4,s;", "``LN;4,s;", Date0, Date0, linkedList0);
      cart0.setCurrency("mI9");
      Cart cart1 = new Cart("id=", "``LN;4,s;", "id=", Date0, Date0, linkedList0);
      boolean boolean0 = cart0.equals(cart1);
      assertEquals("mI9", cart0.getCurrency());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Date Date0 = new Date();
      Cart cart0 = new Cart("Cart [updated=Fri Feb 14 20:21:21 GMT 2014, ]", (String) null, "O<aG1", Date0, Date0, (List<Product>) null);
      cart0.hashCode();
      assertEquals("O<aG1", cart0.getCurrency());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cart cart0 = new Cart();
      cart0.setId("id=");
      cart0.hashCode();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Cart cart0 = new Cart();
      cart0.setCountryCode("Cart [created=Fri Feb 14 20:21:21 GMT 2014, ]");
      String string0 = cart0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Date Date0 = new Date(2033, 62, 62);
      LinkedList<Product> linkedList0 = new LinkedList<Product>();
      Cart cart0 = new Cart("U~", "U~", "U~", Date0, Date0, linkedList0);
      List<Product> list0 = cart0.getProduct();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Date Date0 = new Date();
      LinkedList<Product> linkedList0 = new LinkedList<Product>();
      Product product0 = new Product();
      linkedList0.offerLast(product0);
      Cart cart0 = new Cart("7zK0A7G", "7zK0A7G", "id=", Date0, Date0, linkedList0);
      List<Product> list0 = cart0.getProduct();
      assertNotNull(list0);
      assertEquals("id=", cart0.getCurrency());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Date Date0 = new Date((-1L));
      Cart cart0 = new Cart(", ", ", ", (String) null, Date0, Date0, (List<Product>) null);
      String string0 = cart0.getId();
      assertEquals(", ", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Date Date0 = new Date(0, 464, 464);
      Cart cart0 = new Cart("", "", "", Date0, Date0, (List<Product>) null);
      String string0 = cart0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Cart cart0 = new Cart();
      cart0.setCurrency("id=");
      String string0 = cart0.getCurrency();
      assertEquals("id=", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<Product> linkedList0 = new LinkedList<Product>();
      Cart cart0 = new Cart("hxHU)", "", "", (Date) null, (Date) null, linkedList0);
      String string0 = cart0.getCurrency();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals("", cart0.getCountryCode());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Date Date0 = new Date(0, 0, 0, (-852), (-1), 0);
      LinkedList<Product> linkedList0 = new LinkedList<Product>();
      Cart cart0 = new Cart("5J", "category=", "", Date0, Date0, linkedList0);
      assertEquals("category=", cart0.getCountryCode());
      
      cart0.setCountryCode("");
      String string0 = cart0.getCountryCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Date Date0 = new Date(1977, 1301, (-2286));
      LinkedList<Product> linkedList0 = new LinkedList<Product>();
      Cart cart0 = new Cart("``LN;4,s;", "``LN;4,s;", "``LN;4,s;", Date0, Date0, linkedList0);
      String string0 = cart0.toString();
      assertEquals("Cart [id=``LN;4,s;, countryCode=``LN;4,s;, currency=``LN;4,s;, created=Mon Feb 26 00:00:00 GMT 3979, updated=Mon Feb 26 00:00:00 GMT 3979, product=[]]", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Date Date0 = new Date(1301, 1301, 1301, (-2286), 1960);
      LinkedList<Product> linkedList0 = new LinkedList<Product>();
      Cart cart0 = new Cart("2;c.]ixB", "2;c.]ixB", "2;c.]ixB", Date0, Date0, linkedList0);
      LinkedList<Product> linkedList1 = new LinkedList<Product>();
      Product product0 = new Product("S5dLWVUx<[s (", "2;c.]ixB", "created=", 1301, Date0, Date0);
      linkedList1.offerFirst(product0);
      Cart cart1 = new Cart("2;c.]ixB", "2;c.]ixB", "2;c.]ixB", Date0, Date0, linkedList1);
      boolean boolean0 = cart0.equals(cart1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Cart cart0 = new Cart();
      Cart cart1 = new Cart();
      assertTrue(cart1.equals((Object)cart0));
      
      LinkedList<Product> linkedList0 = new LinkedList<Product>();
      cart1.setProduct(linkedList0);
      boolean boolean0 = cart0.equals(cart1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Cart cart0 = new Cart();
      Cart cart1 = new Cart();
      assertTrue(cart1.equals((Object)cart0));
      
      cart1.setId("id=");
      boolean boolean0 = cart1.equals(cart0);
      assertFalse(cart1.equals((Object)cart0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Cart cart0 = new Cart();
      Date Date0 = new Date(0, 1878, (-631));
      cart0.setCreated(Date0);
      LinkedList<Product> linkedList0 = new LinkedList<Product>();
      Cart cart1 = new Cart("pa1)db'x~X[Wg!*V*RN", (String) null, "com.varma.main.entity.Cart", Date0, (Date) null, linkedList0);
      boolean boolean0 = cart0.equals(cart1);
      assertFalse(boolean0);
      assertEquals("com.varma.main.entity.Cart", cart1.getCurrency());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Date Date0 = new Date(1301, 0, 1301, (-2286), 1960);
      LinkedList<Product> linkedList0 = new LinkedList<Product>();
      Cart cart0 = new Cart("2;c.]ixB", "2;c.]ixB", "2;c.]ixB", Date0, Date0, linkedList0);
      Cart cart1 = new Cart("2;c.]ixB", "2;c.]ixB", "2;c.]ixB", Date0, Date0, linkedList0);
      boolean boolean0 = cart0.equals(cart1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Cart cart0 = new Cart();
      Date Date0 = new Date((-1841880789), (-1841880789), (-1841880789), (-1841880789), (-1841880789));
      Cart cart1 = new Cart("Cart []", ", ", "Cart []", Date0, Date0, (List<Product>) null);
      boolean boolean0 = cart0.equals(cart1);
      assertEquals(", ", cart1.getCountryCode());
      assertFalse(boolean0);
      assertEquals("Cart []", cart1.getCurrency());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Cart cart0 = new Cart();
      cart0.setCountryCode(", ");
      Cart cart1 = new Cart();
      boolean boolean0 = cart0.equals(cart1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Cart cart0 = new Cart();
      Cart cart1 = new Cart();
      boolean boolean0 = cart0.equals(cart1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Cart cart0 = new Cart();
      boolean boolean0 = cart0.equals(cart0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Cart cart0 = new Cart();
      Integer integer0 = new Integer(885);
      boolean boolean0 = cart0.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Cart cart0 = new Cart();
      cart0.setCountryCode("Cart [created=Fri Feb 14 20:21:21 GMT 2014, ]");
      String string0 = cart0.getCountryCode();
      assertEquals("Cart [created=Fri Feb 14 20:21:21 GMT 2014, ]", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Cart cart0 = new Cart();
      Date Date0 = new Date((-1841880789), (-1841880789), (-1841880789), (-1841880789), (-1841880789));
      cart0.setUpdated(Date0);
      assertNull(cart0.getId());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Cart cart0 = new Cart();
      String string0 = cart0.getCountryCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Cart cart0 = new Cart();
      List<Product> list0 = cart0.getProduct();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Cart cart0 = new Cart();
      Date date0 = cart0.getUpdated();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Cart cart0 = new Cart();
      Date date0 = cart0.getCreated();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Cart cart0 = new Cart();
      String string0 = cart0.getCurrency();
      assertNull(string0);
  }
}
