/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 14 20:57:18 GMT 2021
 */

package com.varma.main.entity;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertSame;
import static org.junit.Assert.assertTrue;

import java.util.Date;
import java.util.LinkedList;
import java.util.List;

import org.junit.Test;

public class CartProductTest{

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      Date Date0 = new Date((-1), 3293, (-1), 3293, 1312);
      cartProduct0.setCreated(Date0);
      String string0 = cartProduct0.toString();
      assertEquals("Cart [created=Fri Oct 15 02:52:00 GMT 2173, ]", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      Date Date0 = new Date((-1967L));
      cartProduct0.updated = (Date) Date0;
      String string0 = cartProduct0.toString();
      assertEquals("Cart [updated=Wed Dec 31 23:59:58 GMT 1969, ]", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct("|", "|", "|", (Date) null, (Date) null, (List<Product>) null);
      cartProduct0.id = "id=";
      String string0 = cartProduct0.toString();
      assertEquals("Cart [id=id=, countryCode=|, currency=|, ]", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct("|", "|", "|", (Date) null, (Date) null, (List<Product>) null);
      cartProduct0.setCountryCode("category=");
      cartProduct0.toString();
      assertEquals("category=", cartProduct0.getCountryCode());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      Date Date0 = new Date((-1538609437), 1, 1, 0, 0);
      cartProduct0.setCreated(Date0);
      CartProduct cartProduct1 = new CartProduct();
      boolean boolean0 = cartProduct0.equals(cartProduct1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Date Date0 = new Date(0, 0, 0, 4444, 4444);
      Date Date1 = new Date();
      CartProduct cartProduct0 = new CartProduct("lRi_", "lRi_", "+e)'", Date0, Date1, (List<Product>) null);
      cartProduct0.hashCode();
      assertEquals("+e)'", cartProduct0.getCurrency());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Date Date0 = new Date((-1879048189), 1833, 1833, (-1879048189), 1833, 1833);
      CartProduct cartProduct0 = new CartProduct();
      cartProduct0.setUpdated(Date0);
      cartProduct0.hashCode();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      Date date0 = new Date();
      cartProduct0.updated = date0;
      Date date1 = cartProduct0.getUpdated();
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date1.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      LinkedList<Product> linkedList0 = new LinkedList<Product>();
      cartProduct0.setProduct(linkedList0);
      List<Product> list0 = cartProduct0.getProduct();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      LinkedList<Product> linkedList0 = new LinkedList<Product>();
      Product product0 = new Product();
      linkedList0.add(product0);
      cartProduct0.setProduct(linkedList0);
      List<Product> list0 = cartProduct0.getProduct();
      assertTrue(list0.contains(product0));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      cartProduct0.setId(")n[");
      String string0 = cartProduct0.getId();
      assertEquals(")n[", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Date Date0 = new Date();
      CartProduct cartProduct0 = new CartProduct("", "", "", Date0, (Date) null, (List<Product>) null);
      String string0 = cartProduct0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct("product=", "", "3NCXFGgsiyW%jW9", (Date) null, (Date) null, (List<Product>) null);
      String string0 = cartProduct0.getCurrency();
      assertEquals("", cartProduct0.getCountryCode());
      assertNotNull(string0);
      assertEquals("3NCXFGgsiyW%jW9", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      cartProduct0.setCurrency("");
      String string0 = cartProduct0.getCurrency();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      Date Date0 = new Date(1086L);
      cartProduct0.created = (Date) Date0;
      Date date0 = cartProduct0.getCreated();
      assertSame(date0, Date0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      String string0 = cartProduct0.getCountryCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      cartProduct0.setCountryCode("");
      String string0 = cartProduct0.getCountryCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      LinkedList<Product> linkedList0 = new LinkedList<Product>();
      cartProduct0.setProduct(linkedList0);
      String string0 = cartProduct0.toString();
      assertEquals("Cart [product=[]]", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      Date Date0 = new Date((-1967L));
      cartProduct0.updated = (Date) Date0;
      cartProduct0.setId(")n[");
      CartProduct cartProduct1 = new CartProduct();
      cartProduct1.id = ")n[";
      boolean boolean0 = cartProduct0.equals(cartProduct1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct("product=", "", "3NCXFGgsiyW%jW9", (Date) null, (Date) null, (List<Product>) null);
      assertEquals("3NCXFGgsiyW%jW9", cartProduct0.getCurrency());
      
      cartProduct0.setCurrency("-:'w");
      Date Date0 = new Date();
      CartProduct cartProduct1 = new CartProduct("product=", "", "-:'w", (Date) null, Date0, (List<Product>) null);
      boolean boolean0 = cartProduct0.equals(cartProduct1);
      assertEquals("-:'w", cartProduct0.getCurrency());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      LinkedList<Product> linkedList0 = new LinkedList<Product>();
      cartProduct0.setProduct(linkedList0);
      CartProduct cartProduct1 = new CartProduct();
      boolean boolean0 = cartProduct0.equals(cartProduct1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      cartProduct0.setCurrency("-:'w");
      cartProduct0.setCountryCode("");
      Date Date0 = new Date();
      CartProduct cartProduct1 = new CartProduct("product=", "", "-:'w", (Date) null, Date0, (List<Product>) null);
      boolean boolean0 = cartProduct0.equals(cartProduct1);
      assertEquals("", cartProduct0.getCountryCode());
      assertFalse(boolean0);
      assertEquals("-:'w", cartProduct1.getCurrency());
      assertEquals("", cartProduct1.getCountryCode());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      CartProduct cartProduct1 = new CartProduct();
      assertTrue(cartProduct1.equals((Object)cartProduct0));
      
      cartProduct1.setCurrency(", ");
      boolean boolean0 = cartProduct0.equals(cartProduct1);
      assertFalse(cartProduct1.equals((Object)cartProduct0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Date Date0 = new Date((-1538609437), (-1149), (-1149));
      CartProduct cartProduct0 = new CartProduct();
      CartProduct cartProduct1 = new CartProduct((String) null, (String) null, (String) null, Date0, Date0, (List<Product>) null);
      boolean boolean0 = cartProduct1.equals(cartProduct0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Date Date0 = new Date((-2083483322), (-1971893584), 2695, (-1855036216), (-2083483322), 2695);
      CartProduct cartProduct0 = new CartProduct();
      cartProduct0.countryCode = "pr6#h!g*";
      CartProduct cartProduct1 = new CartProduct("8", "pr6#h!g*", (String) null, Date0, Date0, (List<Product>) null);
      boolean boolean0 = cartProduct0.equals(cartProduct1);
      assertFalse(boolean0);
      assertEquals("pr6#h!g*", cartProduct1.getCountryCode());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Date Date0 = new Date((-1), (-1855036216), 2518, (-1984192824), (-1984192824), (-1));
      LinkedList<Product> linkedList0 = new LinkedList<Product>();
      CartProduct cartProduct0 = new CartProduct("?KgdE*Og3", "?KgdE*Og3", "?KgdE*Og3", Date0, Date0, linkedList0);
      CartProduct cartProduct1 = new CartProduct("?KgdE*Og3", "?KgdE*Og3", "?KgdE*Og3", Date0, Date0, linkedList0);
      boolean boolean0 = cartProduct0.equals(cartProduct1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      CartProduct cartProduct1 = new CartProduct("product=", "", "3NCXFGgsiyW%jW9", (Date) null, (Date) null, (List<Product>) null);
      cartProduct0.setCountryCode("");
      boolean boolean0 = cartProduct1.equals(cartProduct0);
      assertFalse(boolean0);
      assertEquals("3NCXFGgsiyW%jW9", cartProduct1.getCurrency());
      assertEquals("", cartProduct1.getCountryCode());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      CartProduct cartProduct1 = new CartProduct(")AXW_XX", ")AXW_XX", (String) null, (Date) null, (Date) null, (List<Product>) null);
      boolean boolean0 = cartProduct0.equals(cartProduct1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      CartProduct cartProduct1 = new CartProduct("product=", "", "3NCXFGgsiyW%jW9", (Date) null, (Date) null, (List<Product>) null);
      boolean boolean0 = cartProduct1.equals(cartProduct0);
      assertEquals("3NCXFGgsiyW%jW9", cartProduct1.getCurrency());
      assertFalse(boolean0);
      assertEquals("", cartProduct1.getCountryCode());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      CartProduct cartProduct1 = new CartProduct();
      boolean boolean0 = cartProduct0.equals(cartProduct1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      boolean boolean0 = cartProduct0.equals(cartProduct0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      boolean boolean0 = cartProduct0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Date Date0 = new Date((-1), (-1855036216), 2518, (-1984192824), (-1984192824), (-1));
      LinkedList<Product> linkedList0 = new LinkedList<Product>();
      CartProduct cartProduct0 = new CartProduct("?KgdE*Og3", "?KgdE*Og3", "?KgdE*Og3", Date0, Date0, linkedList0);
      cartProduct0.hashCode();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      cartProduct0.hashCode();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      cartProduct0.countryCode = "price=";
      cartProduct0.hashCode();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      String string0 = cartProduct0.getCurrency();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      String string0 = cartProduct0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      cartProduct0.setId(")n[");
      CartProduct cartProduct1 = new CartProduct();
      boolean boolean0 = cartProduct0.equals(cartProduct1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      Date date0 = cartProduct0.getUpdated();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      Date date0 = cartProduct0.getCreated();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct();
      List<Product> list0 = cartProduct0.getProduct();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct("|", "|", "|", (Date) null, (Date) null, (List<Product>) null);
      cartProduct0.setCountryCode("category=");
      cartProduct0.hashCode();
      assertEquals("category=", cartProduct0.getCountryCode());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CartProduct cartProduct0 = new CartProduct("|", "|", "|", (Date) null, (Date) null, (List<Product>) null);
      String string0 = cartProduct0.getCountryCode();
      assertEquals("|", string0);
  }
}
